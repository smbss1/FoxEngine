# this is the build file for project fox_lexer
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(fox_lexer LANGUAGES CXX C)

# target
add_executable(fox_editor "")
set_target_properties(fox_editor PROPERTIES OUTPUT_NAME "fox_editor")
set_target_properties(fox_editor PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/FoxEditor")
add_dependencies(fox_editor fox_engine)
target_include_directories(fox_editor PRIVATE
    FoxEditor/src
    Fox/vendor/entt/include
    Fox/vendor/ImGuizmo/ImGuizmo
    Fox/vendor/monos/include
    Fox/src/Fox
    Fox/src/Platform
    Fox/vendor/glad
    Fox/vendor/glm
    Fox/vendor/FoxJson/include
    Fox/vendor/FoxJson/submodules/GenericLexer/include
    Fox/vendor/imgui
)
target_compile_options(fox_editor PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(fox_editor PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(fox_editor PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET fox_editor PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(fox_editor PRIVATE
    fox_engine
    yaml-cpp
    glfw3
    Xrandr
    Xinerama
    Xcursor
    Xrender
    X11
    Xi
    Xfixes
    Xext
    X11-xcb
    xcb
    xcb-composite
    xcb-damage
    xcb-dpms
    xcb-dri2
    xcb-dri3
    xcb-glx
    xcb-present
    xcb-randr
    xcb-record
    xcb-render
    xcb-res
    xcb-screensaver
    xcb-shape
    xcb-shm
    xcb-sync
    xcb-xf86dri
    xcb-xfixes
    xcb-xinerama
    xcb-xinput
    xcb-xkb
    xcb-xtest
    xcb-xv
    xcb-xvmc
    python3.10
    ssl
    crypto
    ffi
    z
    Xau
    Xdmcp
    OpenGL
    box2d
    mono-2.0
    monosgen-2.0
    m
    pthread
    glad
    glm
    fox_json
    fox_lexer
    imgui
    dl
    pthread
)
target_link_directories(fox_editor PRIVATE
    build/linux/x86_64/release
    /usr/lib
    /home/samuel/.xmake/packages/g/glfw/3.3.8/aa037e96cc854680a09e144c4b5c8fe0/lib
    /home/samuel/.xmake/packages/b/box2d/2.4.1/f60ae68e483c4942bc8545c18171c10c/lib
    /usr/lib/pkgconfig/../../lib
)
target_link_options(fox_editor PRIVATE
    -m64
)
target_sources(fox_editor PRIVATE
    FoxEditor/src/Panels/StatsPanel.cpp
    FoxEditor/src/Panels/ContentBrowserPanel.cpp
    FoxEditor/src/Panels/SceneHierarchyPanel.cpp
    FoxEditor/src/Panels/ConsolePanel.cpp
    FoxEditor/src/Panels/SettingsPanel.cpp
    FoxEditor/src/Panels/PropertyPanel.cpp
    FoxEditor/src/EditorApp.cpp
    FoxEditor/src/EditorLayer.cpp
)

# target
add_library(fox_engine STATIC "")
set_target_properties(fox_engine PROPERTIES OUTPUT_NAME "fox_engine")
set_target_properties(fox_engine PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(fox_engine imgui fox_json glm glad)
target_include_directories(fox_engine PRIVATE
    Fox/vendor/entt/include
    Fox/vendor/ImGuizmo/ImGuizmo
    Fox/vendor/monos/include
    Fox/src/Fox
    Fox/src/Platform
    Fox/vendor/glad
    Fox/vendor/glm
    Fox/vendor/FoxJson/include
    Fox/vendor/FoxJson/submodules/GenericLexer/include
    Fox/vendor/imgui
)
target_include_directories(fox_engine INTERFACE
    Fox/vendor/entt/include
    Fox/vendor/ImGuizmo/ImGuizmo
    Fox/vendor/monos/include
    Fox/src/Fox
    Fox/src/Platform
)
target_include_directories(fox_engine PRIVATE
    /home/samuel/.xmake/packages/g/glfw/3.3.8/aa037e96cc854680a09e144c4b5c8fe0/include
    /usr/include/python3.10
    /usr/include/X11/dri
    /home/samuel/.xmake/packages/b/box2d/2.4.1/f60ae68e483c4942bc8545c18171c10c/include
    /usr/lib/pkgconfig/../../include/mono-2.0
)
target_compile_definitions(fox_engine PRIVATE
    _GLFW_X11
    GLFW_INCLUDE_NONE
)
target_compile_options(fox_engine PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(fox_engine PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(fox_engine PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET fox_engine PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(fox_engine PRIVATE
    yaml-cpp
    glfw3
    Xrandr
    Xinerama
    Xcursor
    Xrender
    X11
    Xi
    Xfixes
    Xext
    X11-xcb
    xcb
    xcb-composite
    xcb-damage
    xcb-dpms
    xcb-dri2
    xcb-dri3
    xcb-glx
    xcb-present
    xcb-randr
    xcb-record
    xcb-render
    xcb-res
    xcb-screensaver
    xcb-shape
    xcb-shm
    xcb-sync
    xcb-xf86dri
    xcb-xfixes
    xcb-xinerama
    xcb-xinput
    xcb-xkb
    xcb-xtest
    xcb-xv
    xcb-xvmc
    python3.10
    ssl
    crypto
    ffi
    z
    Xau
    Xdmcp
    OpenGL
    box2d
    mono-2.0
    monosgen-2.0
    m
    pthread
    glad
    glm
    fox_json
    fox_lexer
    imgui
    dl
    pthread
)
target_link_directories(fox_engine PRIVATE
    /usr/lib
    /home/samuel/.xmake/packages/g/glfw/3.3.8/aa037e96cc854680a09e144c4b5c8fe0/lib
    /home/samuel/.xmake/packages/b/box2d/2.4.1/f60ae68e483c4942bc8545c18171c10c/lib
    /usr/lib/pkgconfig/../../lib
    build/linux/x86_64/release
)
target_sources(fox_engine PRIVATE
    Fox/vendor/ImGuizmo/ImCurveEdit.cpp
    Fox/vendor/ImGuizmo/ImGradient.cpp
    Fox/vendor/ImGuizmo/ImSequencer.cpp
    Fox/vendor/ImGuizmo/ImGuizmo.cpp
    Fox/vendor/ImGuizmo/GraphEditor.cpp
    Fox/src/Platform/GlfwWindows/GlfwWindow.cpp
    Fox/src/Platform/GlfwWindows/GlfwWindowsPlatformUtils.cpp
    Fox/src/Platform/OpenGL/VertexBuffer.cpp
    Fox/src/Platform/OpenGL/IndexBuffer.cpp
    Fox/src/Platform/OpenGL/OpenGLRendererAPI.cpp
    Fox/src/Platform/OpenGL/SpriteManager.cpp
    Fox/src/Platform/OpenGL/stb_image.cpp
    Fox/src/Platform/OpenGL/OpenGLShader.cpp
    Fox/src/Platform/OpenGL/OpenGLUniformBuffer.cpp
    Fox/src/Platform/OpenGL/OpenGLFrameBuffer.cpp
    Fox/src/Platform/OpenGL/OpenGLVertexArray.cpp
    Fox/src/Platform/OpenGL/TextureManager.cpp
    Fox/src/Platform/OpenGL/OpenGLUtils.cpp
    Fox/src/Platform/OpenGL/OpenGLContext.cpp
    Fox/src/Platform/OpenGL/OpenGLTexture.cpp
    Fox/src/Fox/ImGui/ImGuiBuild.cpp
    Fox/src/Fox/ImGui/ImGuiExtension.cpp
    Fox/src/Fox/ImGui/ImGuiLayer.cpp
    Fox/src/Fox/ImGui/ImGuiFieldDrawer.cpp
    Fox/src/Fox/Asset/AssetImporter.cpp
    Fox/src/Fox/Asset/AssetRegistry.cpp
    Fox/src/Fox/Asset/AssetSerializer.cpp
    Fox/src/Fox/Asset/AssetManager.cpp
    Fox/src/Fox/Components/Animator/Track.cpp
    Fox/src/Fox/Events/EventSystem.cpp
    Fox/src/Fox/Math/Quat.cpp
    Fox/src/Fox/Math/Math.cpp
    Fox/src/Fox/Math/Vec3.cpp
    Fox/src/Fox/Scripting/GCManager.cpp
    "Fox/src/Fox/Scripting/Old Thing/ScriptRegistry.cpp"
    Fox/src/Fox/Scripting/ScriptTypes.cpp
    Fox/src/Fox/Scripting/FieldStorage.cpp
    Fox/src/Fox/Scripting/ScriptGlue.cpp
    Fox/src/Fox/Scripting/ScriptCache.cpp
    Fox/src/Fox/Scripting/ScriptEngine.cpp
    Fox/src/Fox/Scripting/Utils.cpp
    Fox/src/Fox/Scripting/Marshal.cpp
    Fox/src/Fox/Scene/Prefab.cpp
    Fox/src/Fox/Scene/Scene.cpp
    Fox/src/Fox/Scene/SceneSerializer.cpp
    Fox/src/Fox/Scene/ScriptableBehaviour.cpp
    Fox/src/Fox/Scene/SceneCamera.cpp
    Fox/src/Fox/Scene/EntitySerializer.cpp
    Fox/src/Fox/Utils/String.cpp
    Fox/src/Fox/Utils/Path.cpp
    Fox/src/Fox/Utils/PlatformUtils.cpp
    Fox/src/Fox/Utils/FileSystem.cpp
    Fox/src/Fox/Reflection/Reflection.cpp
    Fox/src/Fox/Core/LayerStack.cpp
    Fox/src/Fox/Core/Layer.cpp
    Fox/src/Fox/Core/Logger.cpp
    Fox/src/Fox/Core/ProjectSerializer.cpp
    Fox/src/Fox/Core/State.cpp
    Fox/src/Fox/Core/Input/Mouse.cpp
    Fox/src/Fox/Core/Input/Input.cpp
    Fox/src/Fox/Core/UserPreferences.cpp
    Fox/src/Fox/Core/UUID.cpp
    Fox/src/Fox/Core/Window.cpp
    Fox/src/Fox/Core/Application.cpp
    Fox/src/Fox/Core/Ref.cpp
    Fox/src/Fox/Core/Project.cpp
    Fox/src/Fox/Renderer/SubTexture2D.cpp
    Fox/src/Fox/Renderer/Texture.cpp
    Fox/src/Fox/Renderer/Renderer2D.cpp
    Fox/src/Fox/Renderer/EditorCamera.cpp
    Fox/src/Fox/Renderer/Shader.cpp
    Fox/src/Fox/Renderer/VertexArray.cpp
    Fox/src/Fox/Renderer/UniformBuffer.cpp
    Fox/src/Fox/Renderer/RendererCommand.cpp
    Fox/src/Fox/Renderer/Buffer.cpp
    Fox/src/Fox/Renderer/Framebuffer.cpp
    Fox/src/Fox/Renderer/OrthographicCamera.cpp
    Fox/src/Fox/Renderer/RendererAPI.cpp
    Fox/src/Fox/Renderer/OrthographicCameraController.cpp
    Fox/src/Fox/Renderer/Renderer.cpp
    Fox/src/Fox/Renderer/GraphicsContext.cpp
    Fox/src/Fox/Ecs/Entity.cpp
)

# target
add_library(fox_json STATIC "")
set_target_properties(fox_json PROPERTIES OUTPUT_NAME "fox_json")
set_target_properties(fox_json PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(fox_json fox_lexer)
target_include_directories(fox_json PRIVATE
    Fox/vendor/FoxJson/include
    Fox/vendor/FoxJson/submodules/GenericLexer/include
)
target_include_directories(fox_json INTERFACE
    Fox/vendor/FoxJson/include
)
target_compile_options(fox_json PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(fox_json PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(fox_json PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET fox_json PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(fox_json PRIVATE
    fox_lexer
    pthread
)
target_link_directories(fox_json PRIVATE
    build/linux/x86_64/release
)
target_sources(fox_json PRIVATE
    Fox/vendor/FoxJson/src/ParserHelper.cpp
    Fox/vendor/FoxJson/src/ParseError.cpp
    Fox/vendor/FoxJson/src/AException.cpp
    Fox/vendor/FoxJson/src/json.cpp
    Fox/vendor/FoxJson/src/Parser.cpp
)

# target
add_library(fox_lexer STATIC "")
set_target_properties(fox_lexer PROPERTIES OUTPUT_NAME "fox_lexer")
set_target_properties(fox_lexer PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(fox_lexer PRIVATE
    Fox/vendor/FoxJson/submodules/GenericLexer/include
)
target_include_directories(fox_lexer INTERFACE
    Fox/vendor/FoxJson/submodules/GenericLexer/include
)
target_compile_options(fox_lexer PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(fox_lexer PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(fox_lexer PRIVATE cxx_std_14)
if(MSVC)
    set_property(TARGET fox_lexer PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(fox_lexer PRIVATE
    pthread
)
target_sources(fox_lexer PRIVATE
    Fox/vendor/FoxJson/submodules/GenericLexer/src/CommutativeInserter.cpp
    Fox/vendor/FoxJson/submodules/GenericLexer/src/Token.cpp
    Fox/vendor/FoxJson/submodules/GenericLexer/src/TokenScanner.cpp
    Fox/vendor/FoxJson/submodules/GenericLexer/src/TokenInserter.cpp
    Fox/vendor/FoxJson/submodules/GenericLexer/src/TokenJoiner.cpp
    Fox/vendor/FoxJson/submodules/GenericLexer/src/TokenModifier.cpp
    Fox/vendor/FoxJson/submodules/GenericLexer/src/Lexer.cpp
)

# target
add_library(glad STATIC "")
set_target_properties(glad PROPERTIES OUTPUT_NAME "glad")
set_target_properties(glad PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(glad PRIVATE
    Fox/vendor/glad
)
target_include_directories(glad INTERFACE
    Fox/vendor/glad
)
target_compile_options(glad PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(glad PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(glad PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET glad PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(glad PRIVATE
    Fox/vendor/glad/glad/glad.cpp
)

# target
add_library(glm STATIC "")
set_target_properties(glm PROPERTIES OUTPUT_NAME "glm")
set_target_properties(glm PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(glm PRIVATE
    Fox/vendor/glm
)
target_include_directories(glm INTERFACE
    Fox/vendor/glm
)
target_compile_options(glm PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(glm PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(glm PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET glm PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(glm PRIVATE
    Fox/vendor/glm/glm/detail/glm.cpp
)

# target
add_library(imgui STATIC "")
set_target_properties(imgui PROPERTIES OUTPUT_NAME "imgui")
set_target_properties(imgui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(imgui PRIVATE
    Fox/vendor/imgui
)
target_include_directories(imgui INTERFACE
    Fox/vendor/imgui
)
target_compile_options(imgui PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(imgui PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(imgui PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET imgui PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(imgui PRIVATE
    Fox/vendor/imgui/imgui_widgets.cpp
    Fox/vendor/imgui/imgui_tables.cpp
    Fox/vendor/imgui/imgui.cpp
    Fox/vendor/imgui/imgui_draw.cpp
    Fox/vendor/imgui/imgui_demo.cpp
)

# target
add_executable(sandbox "")
set_target_properties(sandbox PROPERTIES OUTPUT_NAME "sandbox")
set_target_properties(sandbox PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/sandbox")
add_dependencies(sandbox fox_engine)
target_include_directories(sandbox PRIVATE
    sandbox/include
    Fox/vendor/entt/include
    Fox/vendor/ImGuizmo/ImGuizmo
    Fox/vendor/monos/include
    Fox/src/Fox
    Fox/src/Platform
    Fox/vendor/glad
    Fox/vendor/glm
    Fox/vendor/FoxJson/include
    Fox/vendor/FoxJson/submodules/GenericLexer/include
    Fox/vendor/imgui
)
target_compile_options(sandbox PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(sandbox PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(sandbox PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET sandbox PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(sandbox PRIVATE
    fox_engine
    yaml-cpp
    glfw3
    Xrandr
    Xinerama
    Xcursor
    Xrender
    X11
    Xi
    Xfixes
    Xext
    X11-xcb
    xcb
    xcb-composite
    xcb-damage
    xcb-dpms
    xcb-dri2
    xcb-dri3
    xcb-glx
    xcb-present
    xcb-randr
    xcb-record
    xcb-render
    xcb-res
    xcb-screensaver
    xcb-shape
    xcb-shm
    xcb-sync
    xcb-xf86dri
    xcb-xfixes
    xcb-xinerama
    xcb-xinput
    xcb-xkb
    xcb-xtest
    xcb-xv
    xcb-xvmc
    python3.10
    ssl
    crypto
    ffi
    z
    Xau
    Xdmcp
    OpenGL
    box2d
    mono-2.0
    monosgen-2.0
    m
    pthread
    glad
    glm
    fox_json
    fox_lexer
    imgui
    dl
    pthread
)
target_link_directories(sandbox PRIVATE
    build/linux/x86_64/release
    /usr/lib
    /home/samuel/.xmake/packages/g/glfw/3.3.8/aa037e96cc854680a09e144c4b5c8fe0/lib
    /home/samuel/.xmake/packages/b/box2d/2.4.1/f60ae68e483c4942bc8545c18171c10c/lib
    /usr/lib/pkgconfig/../../lib
)
target_link_options(sandbox PRIVATE
    -m64
)
target_sources(sandbox PRIVATE
    sandbox/src/Example2D.cpp
    sandbox/src/FirstTriangle.cpp
    sandbox/src/SpriteSheet.cpp
    sandbox/src/SandboxApp.cpp
    sandbox/src/Animator.cpp
)

